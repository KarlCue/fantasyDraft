openapi: 3.0.0
servers: []
info:
  description: This is a simple API
  version: "1.0.0"
  title: Fantasy Basketball League
  contact:
    email: kcue1@my.bcit.ca
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: admin
    description: Secured Admin-only calls
  - name: manager
    description: Operations available to regular developers

paths:
  # /game/draft:
  #   post:
  #     tags:
  #       - admin
  #     summary: review pick
  #     operationId: app.add_pick
  #     description: Adds the pick to the roster
  #     responses:
  #       "201":
  #         description: player taken
  #       "400":
  #         description: "invalid input, player dont exist"
  #       "409":
  #         description: player wasnt taken
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/Player"
  #       description: Player to add to roster
  # /game/trades:
  #   post:
  #     tags:
  #       - admin
  #     summary: review trade to validate or pass
  #     operationId: app.add_trade
  #     description: Adds the player to the roster
  #     responses:
  #       "201":
  #         description: the trade pass
  #       "400":
  #         description: "trade vetoed"
  #       "409":
  #         description: incomplete trade
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/Trade"
  #       description: Player to add to roster

  /game/draft/readings:
    get:
      tags:
        - devices
      summary: gets draft selections
      operationId: app.get_add_pick
      description: gets draft selections after a timestamp
      parameters:
        - name: start_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2023-10-03 10:54:57.384402"
        - name: end_timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2023-10-03 10:54:57.384402"

      responses:
        "200":
          description: Successfully returned a list of draft selections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Player"
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /game/trades/readings:
    get:
      tags:
        - devices
      summary: gets trade requests
      operationId: app.get_add_trade
      description: gets trade requests after a timestamp
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2023-10-03 10:54:57.384402"

      responses:
        "200":
          description: Successfully returned a list of trade requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trade"
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    Player:
      type: object
      required:
        - playerName
        - playerTotalFanPts
        - playerGrade
      properties:
        playerId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        playerName:
          type: string
          example: Davis
        jerseyNum:
          type: integer
          example: 23
        playerGrade:
          type: string
          example: A
        plyTotalPoint:
          type: integer
          example: 10
        playerTotalFanPts:
          type: integer
          example: 10
    Trade:
      type: object
      required:
        - tradeId
        - tradeGrade
        - tradeDec
        - tradeProp
      properties:
        tradeProp:
          type: string
          example: playerName for playerName
        tradeId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        tradeGrade:
          type: string
          example: A
        tradeImpact:
          type: integer
          example: 11
        tradeDec:
          type: string
          example: 'Y'
