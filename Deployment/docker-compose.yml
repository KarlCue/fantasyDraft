version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "FantasyDraft:1:1"
      KAFKA_ADVERTISED_HOST_NAME: acit3855.eastus.cloudapp.azure.com
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit3855.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'FantasyDraft'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    depends_on:
      - "zookeeper"

  # receiver:
  #   image: receiver
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - kafka

  # storage:
  #   image: storage
  #   ports:
  #     - "8090:8090"
  #   depends_on:
  #     - kafka
  #     - db

  # processing:
  #   image: processing
  #   ports:
  #     - "8100:8100"
  #   network_mode: "host"
  #   depends_on:
  #     - storage

  # audit_log:
  #   image: audit_log
  #   ports:
  #     - "8110:8110"
  #   depends_on:
  #     - kafka

# Names our volume
volumes:
  my-db:
